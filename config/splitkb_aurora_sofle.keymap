/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    // chain-length = <6>;
    chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};
*/

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        esc_hold_shift: esc_hold_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "ESC_HOLD_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <800>;
            flavor = "balanced";
            hold-trigger-key-positions = <36>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               |CTRL | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   | RALT |

            bindings = <
&kp GRAVE                          &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                            &kp N6     &kp N7  &kp N8     &kp N9    &kp N0    &kp EQUAL
&kp TAB                            &kp Q   &kp W      &kp E     &kp R     &kp T                             &kp Y      &kp U   &kp I      &kp O     &kp P     &kp MINUS
&kp LEFT_SHIFT                     &kp A   &kp S      &kp D     &kp F     &kp G                             &kp H      &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&esc_hold_shift LEFT_SHIFT ESCAPE  &kp Z   &kp X      &kp C     &kp V     &kp B   &trans     &kp F12        &kp N      &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp BACKSLASH
                                           &kp LCTRL  &kp LALT  &kp LGUI  &mo 1   &kp ENTER  &kp BACKSPACE  &kp SPACE  &mo 2   &kp RGUI   &kp RALT
            >;

            sensor-bindings =
                <&inc_dec_kp UP_ARROW DOWN>,
                <&inc_dec_kp C_VOL_UP C_VOL_UP>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&bt BT_CLR         &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &none   &none           &none         &kp LEFT_BRACE  &kp RIGHT_BRACE  &none
&ext_power EP_OFF  &ext_power EP_ON  &ext_power EP_TOG  &none         &none         &none                             &trans  &trans          &kp UP_ARROW  &trans          &trans           &trans
&trans             &trans            &trans             &trans        &trans        &trans                            &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT       &trans           &trans
&trans             &trans            &trans             &trans        &trans        &trans        &trans  &trans      &trans  &trans          &trans        &trans          &trans           &trans
                                     &trans             &trans        &trans        &trans        &none   &kp DELETE  &none   &none           &trans        &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&none   &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                  &kp F6  &kp F7    &kp F8        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans                  &none   &none     &kp UP_ARROW  &none             &none              &none
&trans  &trans  &trans  &trans  &trans  &trans                  &none   &kp LEFT  &kp DOWN      &kp RIGHT         &none              &none
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans            &trans             &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans        &trans
            >;
        };
    };
};
